-- MySQL Script generated by MySQL Workbench
-- Thu May 16 09:37:13 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bd_lab
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bd_lab` ;

-- -----------------------------------------------------
-- Schema bd_lab
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bd_lab` DEFAULT CHARACTER SET utf8mb3 ;
USE `bd_lab` ;

-- -----------------------------------------------------
-- Table `bd_lab`.`academia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`academia` (
  `id_academia` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_academia`))
ENGINE = InnoDB
AUTO_INCREMENT = 37
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `bd_lab`.`docente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`docente` (
  `id_docente` INT NOT NULL AUTO_INCREMENT,
  `numero_emp` INT NOT NULL,
  `nombres` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(45) NULL DEFAULT NULL,
  `id_academia` INT NOT NULL,
  PRIMARY KEY (`id_docente`),
  INDEX `id_academia_idx` (`id_academia` ASC) VISIBLE,
  CONSTRAINT `id_academia`
    FOREIGN KEY (`id_academia`)
    REFERENCES `bd_lab`.`academia` (`id_academia`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `bd_lab`.`horario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`horario` (
  `id_horario` INT NOT NULL AUTO_INCREMENT,
  `desde` VARCHAR(8) NULL DEFAULT NULL,
  `hasta` VARCHAR(8) NULL DEFAULT NULL,
  PRIMARY KEY (`id_horario`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `bd_lab`.`laboratorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`laboratorio` (
  `id_laboratorio` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_laboratorio`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `bd_lab`.`materia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`materia` (
  `id_materia` INT NOT NULL AUTO_INCREMENT,
  `clave` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `id_academiaf` INT NOT NULL,
  PRIMARY KEY (`id_materia`),
  INDEX `id_academia_idxf` (`id_academiaf` ASC) VISIBLE,
  CONSTRAINT `id_academiaf`
    FOREIGN KEY (`id_academiaf`)
    REFERENCES `bd_lab`.`academia` (`id_academia`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `bd_lab`.`reservacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`reservacion` (
  `id_reservacion` INT NOT NULL AUTO_INCREMENT,
  `dia` VARCHAR(45) NOT NULL,
  `id_docente` INT NOT NULL,
  `id_horario` INT NOT NULL,
  `id_materia` INT NOT NULL,
  `id_laboratorio` INT NOT NULL,
  PRIMARY KEY (`id_reservacion`),
  INDEX `id_docente_idx` (`id_docente` ASC) VISIBLE,
  INDEX `id_horario_idx` (`id_horario` ASC) VISIBLE,
  INDEX `id_materia_idx` (`id_materia` ASC) VISIBLE,
  INDEX `id_laboratorio_idx` (`id_laboratorio` ASC) VISIBLE,
  CONSTRAINT `id_docente`
    FOREIGN KEY (`id_docente`)
    REFERENCES `bd_lab`.`docente` (`id_docente`),
  CONSTRAINT `id_horario`
    FOREIGN KEY (`id_horario`)
    REFERENCES `bd_lab`.`horario` (`id_horario`),
  CONSTRAINT `id_laboratorio`
    FOREIGN KEY (`id_laboratorio`)
    REFERENCES `bd_lab`.`laboratorio` (`id_laboratorio`),
  CONSTRAINT `id_materia`
    FOREIGN KEY (`id_materia`)
    REFERENCES `bd_lab`.`materia` (`id_materia`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `bd_lab`.`asistencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_lab`.`asistencia` (
  `id_asistencia` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `estatus` VARCHAR(50) NOT NULL,
  `id_reservacion` INT NOT NULL,
  `cantidad_alumnos` INT NOT NULL,
  `practica` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id_asistencia`),
  UNIQUE INDEX `practica_UNIQUE` (`practica` ASC) VISIBLE,
  INDEX `id_reservacion_idx` (`id_reservacion` ASC) VISIBLE,
  CONSTRAINT `id_reservacion`
    FOREIGN KEY (`id_reservacion`)
    REFERENCES `bd_lab`.`reservacion` (`id_reservacion`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

USE `bd_lab` ;

-- -----------------------------------------------------
-- procedure actualizarAcademia
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root2`@`%` PROCEDURE `actualizarAcademia`(
	IN id_academia1 INT,
    IN nombre1 VARCHAR(45)
)
BEGIN

UPDATE academia
SET
nombre = nombre1
WHERE id_academia = id_academia1;

    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure actualizarHorario
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `actualizarHorario`(
in id_horario1 int, 
in desde1 TIME,
  in hasta1 TIME
 )
begin 
 UPDATE horario
 SET
 desde = desde1, hasta = hasta1 WHERE id_horario = id_horario1;
 end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure actualizarLab
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `actualizarLab`(
	IN id_laboratorio1 INT,
    IN nombre1 VARCHAR(45)
)
BEGIN
UPDATE laboratorio
SET
nombre = nombre1
WHERE id_laboratorio = id_laboratorio1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure actualizarMateria
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `actualizarMateria`(
    IN id_materia1 INT,
    IN clave1 VARCHAR(45),
    IN nombre1 VARCHAR(45),
    IN id_academia1 INT
)
BEGIN
    UPDATE materia SET clave = clave1, nombre = nombre1, id_academiaf = id_academia1 
    WHERE id_materia = id_materia1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure deleteDoc
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `deleteDoc`(
    in id int
    
)
begin
   	 delete from docente
    	where id_docente = id;
   	 
  	 

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure eliminarAcademia
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminarAcademia`(
in id_academia1 int
 )
begin 
DELETE FROM academia WHERE id_academia = id_academia1;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure eliminarHorario
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminarHorario`(
 in id_horario1 int
 )
begin 
 DELETE FROM horario WHERE id_horario = id_horario1;
 end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure eliminarMateria
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminarMateria`(
in id_materia1 int
)
begin 
DELETE FROM materia WHERE id_materia = id_materia1;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertDoc
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertDoc`(
    in numEmp int,
	in nombre varchar(50),
	in apellido varchar(50),
	in foranea int
)
begin

	begin
   	 insert into docente
    	values (null, numEmp, nombre, apellido, foranea);
   	 
   	 
	end;
    


end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarAcademia
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root2`@`%` PROCEDURE `insertarAcademia`(
    IN nombre_academia VARCHAR(45)
)
BEGIN
    INSERT INTO academia (nombre) VALUES (nombre_academia);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarDocente
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root2`@`%` PROCEDURE `insertarDocente`(    
    IN numero_emp INT,
    IN nombres VARCHAR(255),
    IN apellidos VARCHAR(255),
    IN id_academia INT
)
BEGIN
    INSERT INTO docente VALUES (numero_emp,nombres,apellidos,id_academia);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarHorario
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertarHorario`( 
         in desde_horario TIME,
         in hasta_horario TIME
 )
begin 
	 insert into horario (desde, hasta) values (desde_horario, hasta_horario);
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarLab
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertarLab`(
    IN nombre VARCHAR(45)
)
BEGIN
	INSERT INTO laboratorio (nombre) VALUES (nombre);
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarMaterias
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertarMaterias`(
   IN claveDoc VARCHAR(50),
   IN nombreDoc VARCHAR(50),
   IN id_academia1 INT
)
BEGIN
    INSERT INTO materia (clave, nombre, id_academiaf)
    VALUES (claveDoc, nombreDoc, id_academia1);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure seleccionarAcademia
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root2`@`%` PROCEDURE `seleccionarAcademia`(
    IN academia_id INT
)
BEGIN
    IF academia_id = 0 THEN
        SELECT * FROM academia;
    ELSE
        SELECT * FROM academia WHERE id_academia = academia_id;
    END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure seleccionarDoc
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `seleccionarDoc`(
    in idDocente int
)
begin
 if idDocente = 0 then
 select * from docente;
 else
 select * from docente where id_docente = idDocente;
    INSERT INTO docente(nombres, apellidos, id_academia) VALUES (nombres, apellidos, id_academia);
    end if;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure seleccionarHorario
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `seleccionarHorario`(
	in horario_id int
)
begin 
	if horario_id = 0 then
		select * from horario;
	else
		select * from horario where id_horario = horario_id;
	end if;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure seleccionarLab
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `seleccionarLab`(IN laboratorio_id INT)
BEGIN
	if laboratorio_id = 0 THEN
    SELECT * FROM laboratorio;
    ELSE
		SELECT * FROM laboratorio WHERE id_laboratorio = laboratorio_id;
        END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure seleccionarMaterias
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `seleccionarMaterias`(
	in materia_id int
)
begin 
	if materia_id = 0 then
		select * from materia;
	else
		select * from materia where id_materia = materia_id;
	end if;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure updateDoc
-- -----------------------------------------------------

DELIMITER $$
USE `bd_lab`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `updateDoc`(
	IN p_numero_emp INT,
	IN p_nombres VARCHAR(50),
	IN p_apellidos VARCHAR(45),
	IN p_idAcademia INT
)
BEGIN
	DECLARE v_id_docente INT;

	-- Obtener el id_docente basado en el numero_emp
	SELECT id_docente INTO v_id_docente
	FROM docente
	WHERE numero_emp = p_numero_emp;

	-- Actualizar el registro usando el id_docente
	UPDATE docente
	SET
    	nombres = p_nombres,
    	apellidos = p_apellidos,
    	id_academia = p_idAcademia
	WHERE id_docente = v_id_docente;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


